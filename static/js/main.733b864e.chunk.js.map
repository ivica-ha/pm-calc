{"version":3,"sources":["serviceWorker.js","components/calculator/calculator.js","index.js"],"names":["Boolean","window","location","hostname","match","Button","props","className","value","onClick","e","target","disabled","Calculator","i","useState","expression","setExpression","result","setResult","query","setQuery","currentPosition","setCurrentPosition","inputRef","useRef","operators","renderNumberButton","console","log","current","selectionStart","selectionEnd","substring","renderFunctionalButton","length","renderOperatorButton","includes","slice","rendeNavButton","start","end","setSelectionRange","focus","moveCursor","useEffect","fetch","encodeURIComponent","then","res","json","error","id","ref","onChange","readOnly","rendeEqualButton","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.733b864e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport './calculator.css';\n\n\n\nfunction Calculator() {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     error: null,\n  //     isLoaded: false,\n  //     items: []\n  //   };\n  // }\n\n  // const componentDidMount = i => {\n  //   fetch(`http://api.mathjs.org/v4/?${sum}`)\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           items: result\n  //         });\n  //       },\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error\n  //         });\n  //       }\n  //     )\n  // }\n\n\n  const [expression, setExpression] = useState('');\n  const [result, setResult] = useState('');\n  const [query, setQuery] = useState('');\n  const [currentPosition, setCurrentPosition] = useState([0, 0]);\n  const inputRef = useRef();\n\n  const operators = ['*', '-', '+', '/', '.'];\n\n  const renderNumberButton = i => {\n    return <Button className={`d-flex calculator--btn ${i === 0 ? 'zero' : ''}`} \n    value={i}\n    onClick={value => {\n      console.log('*',inputRef.current.selectionStart, inputRef.current.selectionEnd);\n      setExpression(\n      expression.substring(0, currentPosition[0]) + value +  expression.substring(currentPosition[1])\n      \n      )\n      setCurrentPosition([currentPosition[0] + 1, currentPosition[0] + 1])\n\n    }}\n    />;\n  }\n  const renderFunctionalButton = i => {\n    return <Button className='d-flex calculator--btn func' value={i}\n            onClick={value => {\n              if( expression.substring(0, expression.length - 1) !== value ) {\n                setExpression(expression + value)\n              }\n              \n            }}\n            />;\n  }\n  const handleDeleteButton = i => {\n    return <Button className='d-flex calculator--btn func' value={i}\n            onClick={value => setExpression(expression.substring(0, expression.length - 1)\n              )}\n           \n            />;\n  }\n  const renderOperatorButton = i => {\n        return <Button \n        className='d-flex calculator--btn func' \n        value={i}\n        onClick={value => {\n          if( (! operators.includes(expression.slice(-1))) ) {\n            setExpression(expression + value)\n          }\n        }}\n        disabled={!expression.length}\n             />;\n  }\n  const moveCursor = i => {\n    const start = inputRef.current.selectionStart;\n    const end = inputRef.current.selectionEnd;\n\n    if(i === '<') {\n      if(start === end) {\n        inputRef.current.setSelectionRange(start -1,start -1)\n        setCurrentPosition([start - 1, start - 1])\n      } else {\n        inputRef.current.setSelectionRange(start,start)\n        setCurrentPosition([start, start])\n      }\n    } else {\n      if(start === end) {\n        inputRef.current.setSelectionRange(start +1,start +1)\n        setCurrentPosition([start + 1, start + 1])\n      } else {\n        inputRef.current.setSelectionRange(end,end)\n        setCurrentPosition([end, end])\n      }\n    }\n\n    inputRef.current.focus()\n  }\n  const rendeNavButton = i => {\n\n    return <Button className='d-flex calculator--btn nav' value={i}\n    onClick={ () => moveCursor(i) }\n             />;\n  }\n\n  useEffect(() =>\n  {\n    if(query.length) {\n      fetch(`http://api.mathjs.org/v4/?expr=${encodeURIComponent(query)}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setResult(result)\n        },\n        (error) => {\n          console.log(6*(2+4));\n        }\n      )\n    }\n  }, [query]);\n\n  const rendeEqualButton = i => {\n    return <Button className='d-flex calculator--btn equal' value={i}\n            onClick={() => setQuery(expression)}\n             />;\n  }\n\n  \n  return (\n    \n<div className=\"container\">\n    <div className=\"toggle-container\">\n    </div>\n    <section className=\"calculator\" id=\"calculator\">\n        <div className=\"calculator--display\">\n        {rendeNavButton('<')}\n        {rendeNavButton('>')}\n          {/* <input \n          value=\"text\"\n          autoFocus\n          ref={inputRef}\n          // onClick={ () => inputRef.current.setSelectionRange(2,2)}\n          />\n           <button \n           onClick={ () => {\n            console.log('bla', inputRef)\n            inputRef.current.setSelectionRange(2,2)\n            inputRef.current.focus()} }\n           value=\"bok\"\n           /> */}\n          <input\n          value={expression}\n          ref={inputRef}\n          onChange={e => setExpression(e.target.value)}\n          />\n          <input \n          value={result}\n          readOnly\n          />\n          \n        </div>\n        <div className=\"calculator--num\">\n            <div className=\"d-flex justify-content-between\">\n                {handleDeleteButton('C')}\n                {renderFunctionalButton('(')}\n                {renderFunctionalButton(')')}\n                {renderOperatorButton('/')}\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              {renderNumberButton(7)}\n              {renderNumberButton(8)}\n              {renderNumberButton(9)}\n              {renderOperatorButton('*')}\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              {renderNumberButton(4)}\n              {renderNumberButton(5)}\n              {renderNumberButton(6)}\n              {renderOperatorButton('-')}\n            </div>\n            <div className=\"d-flex justify-content-between\">\n                {renderNumberButton(1)}\n                {renderNumberButton(2)}\n                {renderNumberButton(3)}\n                {renderOperatorButton('+')}\n            </div>\n            <div className=\"d-flex justify-content-between\">\n                {renderNumberButton(0)}\n                {renderOperatorButton('.')}\n                {rendeEqualButton('=')}\n            </div>\n        </div>\n    </section>\n\n</div>\n\n  \n  );\n  }\n\n\n\n\nfunction Button(props) {\n  return(\n  <button \n  className = {props.className} \n  value={props.value} \n  onClick={e => {props.onClick(e.target.value)}}\n  disabled={props.disabled}\n  >\n    {props.value}\n      </button>\n    );\n}\n\n\n\n\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Calculator from './components/calculator/calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Switch /> */}\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}