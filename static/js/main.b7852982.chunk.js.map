{"version":3,"sources":["images/sun.svg","images/moon.svg","serviceWorker.js","components/globalStyles.js","components/themes.js","components/calculator/calculator.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","GlobalStyles","createGlobalStyle","theme","themeColor","text","calcBgColor","calcSwitchCol","calcExpressionCol","calcResultCol","borderColor","calcNumBtnBg","calcNumBtnCol","calcNavBtnBg","calcNavBtnCol","calcFuncBtnBg","calcFuncBtnCol","calcOptionBtnBg","calcOptionBtnCol","lightTheme","darkTheme","Button","props","className","value","onClick","e","target","disabled","Calculator","useState","expression","setExpression","result","setResult","query","setQuery","currentPosition","setCurrentPosition","setTheme","inputRef","useRef","operators","cursorStart","cursorEnd","setPosition","startPos","endPos","startRange","endRange","current","setSelectionRange","useEffect","length","fetch","encodeURIComponent","then","res","json","error","i","isOperatorDisabled","leftSubs","substring","rightSubs","includes","isBracketDisabled","isEqualDisabled","renderNumberButton","renderBracketsButton","renderOperatorButton","renderNavButton","focus","moveCursor","id","src","Light","alt","Dark","ref","onChange","placeholder","readOnly","renderEqualButton","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b7852982.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.44e47d6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.60cc482a.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle} from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.themeColor};\n    color: ${({ theme }) => theme.text};\n  }\n  .calculator {\n    background-color: ${({ theme }) => theme.calcBgColor};\n    .calculator--theme-switch {\n      img.active {\n        filter: drop-shadow(0px 0px 2px ${({ theme }) => theme.calcSwitchCol});\n      }\n    }\n    .calculator--results {\n      .expression {\n        color: ${({ theme }) => theme.calcExpressionCol};\n      }  \n      .result {\n        color: ${({ theme }) => theme.calcResultCol};\n      }\n    }\n    .calculator--display {\n      border-color: ${({ theme }) => theme.borderColor};\n      .calculator--results {\n        .expression, .result {\n          background-color: transparent;\n        }\n      }\n    }\n    .calculator--btn {\n      background-color: ${({ theme }) => theme.calcNumBtnBg};\n      color: ${({ theme }) => theme.calcNumBtnCol};\n      &.nav {\n        background-color: ${({ theme }) => theme.calcNavBtnBg};\n        color: ${({ theme }) => theme.calcNavBtnCol};\n      }\n      &.func {\n        background-color: ${({ theme }) => theme.calcFuncBtnBg};\n        color: ${({ theme }) => theme.calcFuncBtnCol};\n      }\n      &.operator, &.equal {\n        background-color: ${({ theme }) => theme.calcOptionBtnBg};\n        color: ${({ theme }) => theme.calcOptionBtnCol};\n      }\n    }\n  }\n  `","export const lightTheme = {\n    themeColor: '#bf0e34',\n    calcBgColor: '#fff',\n    borderColor: '#e7e7e7',\n    calcFuncBtnBg: '#333',\n    calcFuncBtnCol: '#fff',\n    calcOptionBtnBg: '#bf0e34',\n    calcOptionBtnBg: '#bf0e34',\n    calcOptionBtnCol: '#fff',\n    calcNavBtnBg: 'transparent',\n    calcNavBtnCol: '#333',\n    calcNumBtnBg: '#efefef',\n    calcNumBtnCol: '#333',\n    calcExpressionCol: '#747474',\n    calcResultCol: '#bf0e34',\n    calcSwitchCol: 'gray'\n}\nexport const darkTheme = {\n    themeColor: '#333',\n    calcBgColor: '#3c3c3c',\n    borderColor: '#333',\n    calcFuncBtnBg: '#333',\n    calcFuncBtnCol: '#fff',\n    calcOptionBtnBg: '#bf0e34',\n    calcOptionBtnBg: '#bf0e34',\n    calcOptionBtnCol: '#fff',\n    calcNavBtnBg: 'transparent',\n    calcNavBtnCol: '#808080',\n    calcNumBtnBg: '#545454',\n    calcNumBtnCol: '#fff',\n    calcExpressionCol: '#e6e6e6',\n    calcResultCol: '#e6e6e6',\n    calcSwitchCol: 'gray'\n\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"../globalStyles\";\nimport { lightTheme, darkTheme } from \"../themes\";\nimport \"./calculator.css\";\nimport Light from \"../../images/sun.svg\";\nimport Dark from \"../../images/moon.svg\";\n\nfunction Calculator() {\n  const [expression, setExpression] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [currentPosition, setCurrentPosition] = useState([0, 0]);\n  const [theme, setTheme] = useState(\"light\");\n  const inputRef = useRef();\n\n  const operators = [\"*\", \"-\", \"+\", \"/\", \".\"];\n  const cursorStart = currentPosition[0];\n  const cursorEnd = currentPosition[1];\n\n  const lightThemeToggle = () => {\n    setTheme(\"light\");\n  };\n  const darkThemeToggle = () => {\n    setTheme(\"dark\");\n  };\n\n  const setPosition = (startPos, endPos, startRange, endRange) => {\n    setCurrentPosition([startPos, endPos]);\n    inputRef.current.setSelectionRange(startRange, endRange);\n  };\n\n  useEffect(() => {\n    if (query.length) {\n      fetch(`https://api.mathjs.org/v4/?expr=${encodeURIComponent(query)}`)\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            setResult(result);\n            setCurrentPosition([0, 0]);\n          },\n          (error) => {\n            setResult(\"error\");\n          }\n        );\n    }\n  }, [query]);\n\n  const isOperatorDisabled = () => {\n    let leftSubs = expression.substring(cursorStart - 1, cursorStart);\n    let rightSubs = expression.substring(cursorStart, cursorStart + 1);\n\n    if (leftSubs === \".\" || rightSubs === \".\") {\n      return true;\n    }\n\n    if (operators.includes(leftSubs) || operators.includes(rightSubs)) {\n      return true;\n    }\n\n    if (leftSubs === \"(\" || rightSubs === \")\") {\n      return true;\n    }\n\n    if (!expression.length || result !== \"\") {\n      return true;\n    }\n    return false;\n  };\n\n  const isBracketDisabled = (value) => {\n    let leftSubs = expression.substring(cursorStart - 1, cursorStart);\n    let rightSubs = expression.substring(cursorStart, cursorStart + 1);\n\n    if (leftSubs === \".\" || rightSubs === \".\") {\n      return true;\n    }\n    if (operators.includes(leftSubs) && value === \")\") {\n      return true;\n    }\n    if (operators.includes(rightSubs) && value === \"(\") {\n      return true;\n    }\n    return false;\n  };\n\n  const isEqualDisabled = () => {\n    let leftSubs = expression.substring(\n      expression.length - 1,\n      expression.length\n    );\n    return operators.includes(leftSubs) || leftSubs === \"(\" || leftSubs === \".\";\n  };\n\n  const moveCursor = (i) => {\n    if (cursorStart === 0 && i === \"<\") {\n      return;\n    }\n    if (cursorStart === expression.length && i === \">\") {\n      return;\n    }\n\n    if (i === \"<\") {\n      if (cursorStart === cursorEnd) {\n        setPosition(\n          cursorStart - 1,\n          cursorStart - 1,\n          cursorStart - 1,\n          cursorStart - 1\n        );\n      } else {\n        setPosition(cursorStart, cursorStart, cursorStart, cursorStart);\n      }\n    } else {\n      if (cursorStart === cursorEnd) {\n        setPosition(\n          cursorStart + 1,\n          cursorStart + 1,\n          cursorStart + 1,\n          cursorStart + 1\n        );\n      } else {\n        setPosition(cursorEnd, cursorEnd, cursorEnd, cursorEnd);\n      }\n    }\n    inputRef.current.focus();\n  };\n\n  const renderNumberButton = (i) => {\n    return (\n      <Button\n        className={`d-flex calculator--btn ${i === 0 ? \"zero\" : \"\"}`}\n        value={i}\n        onClick={(value) => {\n          if (result) {\n            setResult(\"\");\n            setExpression(value);\n          } else {\n            setExpression(\n              expression.substring(0, cursorStart) +\n                value +\n                expression.substring(cursorEnd)\n            );\n          }\n          setPosition(cursorStart + 1, cursorStart + 1, cursorStart, cursorEnd);\n        }}\n      />\n    );\n  };\n\n  const renderBracketsButton = (i) => {\n    return (\n      <Button\n        className=\"d-flex calculator--btn func\"\n        value={i}\n        onClick={(value) => {\n          if (result !== \"\") {\n            setResult(\"\");\n            setExpression(value);\n          } else {\n            setExpression(\n              expression.substring(0, cursorStart) +\n                value +\n                expression.substring(cursorEnd)\n            );\n          }\n\n          setPosition(cursorStart + 1, cursorStart + 1, cursorStart, cursorEnd);\n        }}\n        disabled={isBracketDisabled(i)}\n      />\n    );\n  };\n\n  const renderDeleteButton = (i) => {\n    return (\n      <Button\n        className=\"d-flex calculator--btn func\"\n        value={i}\n        onClick={(value) => {\n          if (!cursorStart && !cursorEnd && result === \"\") {\n            return;\n          }\n          if (expression.length === 1 || result !== \"\") {\n            setExpression(\"\");\n            setResult(\"\");\n            setCurrentPosition([0, 0]);\n          } else {\n            setExpression(\n              expression.substring(0, cursorStart - 1) +\n                expression.substring(cursorStart)\n            );\n            setPosition(\n              cursorStart - 1,\n              cursorStart - 1,\n              cursorStart,\n              cursorEnd\n            );\n          }\n        }}\n      />\n    );\n  };\n\n  const renderOperatorButton = (i) => {\n    return (\n      <Button\n        className={`d-flex calculator--btn ${i === \".\" ? \"dot\" : \"operator\"}`}\n        value={i}\n        onClick={(value) => {\n          setExpression(\n            expression.substring(0, cursorStart) +\n              value +\n              expression.substring(cursorEnd)\n          );\n\n          setPosition(cursorStart + 1, cursorStart + 1, cursorStart, cursorEnd);\n        }}\n        disabled={isOperatorDisabled()}\n      />\n    );\n  };\n\n  const renderNavButton = (i) => {\n    return (\n      <Button\n        className=\"d-flex calculator--btn nav\"\n        value={i}\n        onClick={() => {\n          moveCursor(i);\n        }}\n      />\n    );\n  };\n\n  const renderEqualButton = (i) => {\n    return (\n      <Button\n        className=\"d-flex calculator--btn equal\"\n        value={i}\n        onClick={() => {\n          setQuery(expression);\n        }}\n        disabled={isEqualDisabled()}\n      />\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <div className=\"container\">\n          <section className=\"calculator\" id=\"calculator\">\n            <div className=\"calculator--theme-switch d-flex flex-wrap\">\n              <div className=\"calculator--theme-switch--light d-flex w-50 justify-content-center\">\n                <span>\n                  <img\n                    className={theme === \"light\" ? \"active\" : \"\"}\n                    onClick={lightThemeToggle}\n                    src={Light}\n                    alt=\"light switch\"\n                  />\n                </span>\n              </div>\n              <div className=\"calculator--theme-switch--dark d-flex w-50 justify-content-center\">\n                <span>\n                  <img\n                    alt=\"dark switch\"\n                    className={theme === \"dark\" ? \"active\" : \"\"}\n                    src={Dark}\n                    onClick={darkThemeToggle}\n                  />\n                </span>\n              </div>\n            </div>\n            <div className=\"calculator--display d-flex flex-wrap\">\n              <div className=\"d-flex w-20 calculator--nav-btns flex-column\">\n                {renderNavButton(\"<\")}\n                {renderNavButton(\">\")}\n              </div>\n              <div className=\"calculator--results w-80 d-flex flex-wrap\">\n                <input\n                  className={\"w-100 text-right expression\"}\n                  value={expression}\n                  ref={inputRef}\n                  onChange={(e) => setExpression(e.target.value)}\n                />\n                <input\n                  className={\"w-100 text-right result\"}\n                  value={result}\n                  placeholder={\"0\"}\n                  readOnly\n                />\n              </div>\n            </div>\n            <div className=\"calculator--num\">\n              <div className=\"d-flex justify-content-between\">\n                {renderDeleteButton(\"C\")}\n                {renderBracketsButton(\"(\")}\n                {renderBracketsButton(\")\")}\n                {renderOperatorButton(\"/\")}\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                {renderNumberButton(7)}\n                {renderNumberButton(8)}\n                {renderNumberButton(9)}\n                {renderOperatorButton(\"*\")}\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                {renderNumberButton(4)}\n                {renderNumberButton(5)}\n                {renderNumberButton(6)}\n                {renderOperatorButton(\"-\")}\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                {renderNumberButton(1)}\n                {renderNumberButton(2)}\n                {renderNumberButton(3)}\n                {renderOperatorButton(\"+\")}\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                {renderNumberButton(0)}\n                {renderOperatorButton(\".\")}\n                {renderEqualButton(\"=\")}\n              </div>\n            </div>\n          </section>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nfunction Button(props) {\n  return (\n    <button\n      className={props.className}\n      value={props.value}\n      onClick={(e) => {\n        props.onClick(e.target.value);\n      }}\n      disabled={props.disabled}\n    >\n      {props.value === \"/\" ? \"÷\" : props.value}\n    </button>\n  );\n}\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Calculator from './components/calculator/calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}